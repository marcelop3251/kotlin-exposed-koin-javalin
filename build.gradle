
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
}

group 'com.register'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation('org.jetbrains.kotlin:kotlin-stdlib:1.3.31')
}

sourceSets {
    integrationTest{
        compileClasspath += main.output
        runtimeClasspath += main.output
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    description = 'executando integration test'
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest

integrationTest.mustRunAfter test


dependencies {
    implementation ('org.jetbrains.kotlin:kotlin-stdlib-jdk8',
            'org.slf4j:slf4j-simple:1.7.26',
            'org.jetbrains.exposed:exposed:0.13.7',
            'com.zaxxer:HikariCP:3.1.0',
            'org.postgresql:postgresql:42.2.5',
            'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8',
            'org.koin:koin-core:2.0.0-GA4',
            'org.jetbrains.kotlin:kotlin-reflect:1.3.40',
            'io.javalin:javalin:3.7.0',
            'com.natpryce:konfig:1.6.10.0'
    )

    testImplementation ('org.junit.jupiter:junit-jupiter:5.4.2',
            'khttp:khttp:0.1.0',
            'com.h2database:h2:1.4.197',
            'org.assertj:assertj-core:3.11.1',
            'io.mockk:mockk:1.9.3'
    )

    
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


jar {
    manifest {
        attributes 'Main-Class': 'com.register.application.RegisterMain'
    }

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

